/**
 * üéØ DECORATOR PATTERN - BASE COMPONENT (Frontend)
 * 
 * BaseCartItem: L·ªõp g·ªëc ƒë·∫°i di·ªán cho m·ªôt s·∫£n ph·∫©m trong gi·ªè h√†ng
 * T∆∞∆°ng th√≠ch v·ªõi React v√† c·∫•u tr√∫c d·ªØ li·ªáu t·ª´ API
 */

export class BaseCartItem {
  /**
   * @param {Object} cartData - D·ªØ li·ªáu t·ª´ GioHangChiTiet API
   * H·ªó tr·ª£ 2 c·∫•u tr√∫c:
   * 1. T·ª´ API gi·ªè h√†ng: { ID, sanPham: { Ten, HinhAnhURL }, DonGia, SoLuong }
   * 2. D·∫°ng ƒë∆°n gi·∫£n: { MaSP, TenSP, Gia, SoLuong, HinhAnh }
   */
  constructor(cartData) {
    // X·ª≠ l√Ω c·∫•u tr√∫c t·ª´ API th·ª±c t·∫ø
    if (cartData.sanPham) {
      // C·∫•u tr√∫c t·ª´ API: { ID, sanPham: {...}, DonGia, SoLuong }
      this.id = cartData.ID || cartData.id;
      this.name = cartData.sanPham.Ten;
      this.basePrice = parseFloat(cartData.DonGia) || 0;
      this.quantity = parseInt(cartData.SoLuong) || 1;
      this.image = cartData.sanPham.HinhAnhURL;
    } else {
      // C·∫•u tr√∫c ƒë∆°n gi·∫£n: { MaSP, TenSP, Gia, SoLuong }
      this.id = cartData.MaSP || cartData.id;
      this.name = cartData.TenSP || cartData.name;
      this.basePrice = parseFloat(cartData.Gia) || 0;
      this.quantity = parseInt(cartData.SoLuong) || 1;
      this.image = cartData.HinhAnh || cartData.image;
    }
    
    this.originalData = cartData; // Gi·ªØ nguy√™n data g·ªëc
  }

  /**
   * T√≠nh t·ªïng gi√° = gi√° g·ªëc √ó s·ªë l∆∞·ª£ng
   * @returns {number}
   */
  getPrice() {
    return this.basePrice * this.quantity;
  }

  /**
   * L·∫•y t√™n s·∫£n ph·∫©m
   * @returns {string}
   */
  getName() {
    return this.name;
  }

  /**
   * L·∫•y s·ªë l∆∞·ª£ng
   * @returns {number}
   */
  getQuantity() {
    return this.quantity;
  }

  /**
   * L·∫•y URL h√¨nh ·∫£nh
   * @returns {string}
   */
  getImage() {
    return this.image;
  }

  /**
   * M√¥ t·∫£ s·∫£n ph·∫©m
   * @returns {string}
   */
  getDescription() {
    return `${this.name} (x${this.quantity})`;
  }

  /**
   * L·∫•y th√¥ng tin chi ti·∫øt (d√πng cho React component)
   * @returns {Object}
   */
  getDetails() {
    return {
      id: this.id,
      name: this.getName(),
      quantity: this.getQuantity(),
      basePrice: this.basePrice,
      finalPrice: this.getPrice(),
      image: this.getImage(),
      description: this.getDescription(),
      priceBreakdown: [] // S·∫Ω ƒë∆∞·ª£c override b·ªüi decorators
    };
  }

  /**
   * Format gi√° theo VNƒê
   * @param {number} price
   * @returns {string}
   */
  formatPrice(price) {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(price);
  }
}

export default BaseCartItem;
