import apiClient from './client';

/**
 * Order API
 * Order related API calls
 */

// T·∫°o ƒë∆°n h√†ng t·ª´ gi·ªè h√†ng
export const createOrder = async (orderData) => {
  try {
    console.log('üõí Creating order with data:', orderData);  // ‚Üê DEBUG
    
    // ‚úÖ G·ª¨I ƒê·∫¶Y ƒê·ª¶ T·∫§T C·∫¢ FIELD
    const response = await apiClient.post('/orders/create', orderData);  // ‚Üê G·ª¨I TO√ÄN B·ªò orderData
    
    console.log('‚úÖ Order created successfully:', response.data);
    return response.data;
  } catch (error) {
    console.error('‚ùå Create order error:', error.response?.data || error);
    throw new Error(error.response?.data?.message || 'Kh√¥ng th·ªÉ t·∫°o ƒë∆°n h√†ng');
  }
};

// L·∫•y danh s√°ch ƒë∆°n h√†ng c·ªßa user
export const getOrderHistory = async (params = {}) => {
  try {
    const response = await apiClient.get('/orders', { params });
    return response.data;
  } catch (error) {
    console.error('‚ùå Get order history error:', error.response?.data || error);
    throw new Error(error.response?.data?.message || 'Kh√¥ng th·ªÉ l·∫•y l·ªãch s·ª≠ ƒë∆°n h√†ng');
  }
};

// L·∫•y chi ti·∫øt ƒë∆°n h√†ng
export const getOrderDetail = async (orderId) => {
  try {
    const response = await apiClient.get(`/orders/${orderId}`);
    return response.data;
  } catch (error) {
    console.error('‚ùå Get order detail error:', error.response?.data || error);
    throw new Error(error.response?.data?.message || 'Kh√¥ng th·ªÉ l·∫•y chi ti·∫øt ƒë∆°n h√†ng');
  }
};

// H·ªßy ƒë∆°n h√†ng
export const cancelOrder = async (orderId) => {
  try {
    const response = await apiClient.patch(`/orders/${orderId}/cancel`);
    return response.data;
  } catch (error) {
    console.error('‚ùå Cancel order error:', error.response?.data || error);
    throw new Error(error.response?.data?.message || 'Kh√¥ng th·ªÉ h·ªßy ƒë∆°n h√†ng');
  }
};

// ‚úÖ Export as named exports (ESLint compliant)
const orderApi = {
  createOrder,
  getOrderHistory,
  getOrderDetail,
  cancelOrder
};

export default orderApi;
