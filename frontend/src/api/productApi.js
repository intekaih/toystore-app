/**
 * Product API
 * Product related API calls
 */

import apiClient from './client';
import config from '../config';

/**
 * L·∫•y danh s√°ch s·∫£n ph·∫©m v·ªõi ph√¢n trang v√† t√¨m ki·∫øm
 * @param {number} page - S·ªë trang
 * @param {string} search - T·ª´ kh√≥a t√¨m ki·∫øm
 * @param {number} limit - S·ªë l∆∞·ª£ng s·∫£n ph·∫©m m·ªói trang
 * @returns {Promise<Object>} - Danh s√°ch s·∫£n ph·∫©m v√† th√¥ng tin ph√¢n trang
 */
export const getProducts = async (page = 1, search = '', limit = 10) => {
  const response = await apiClient.get(config.api.endpoints.product.list, {
    params: { page, search, limit }
  });
  
  if (response.data.success) {
    return response.data.data;
  }
  
  throw new Error(response.data.message || 'Kh√¥ng th·ªÉ t·∫£i danh s√°ch s·∫£n ph·∫©m');
};

/**
 * L·∫•y chi ti·∫øt m·ªôt s·∫£n ph·∫©m
 * @param {number|string} id - ID s·∫£n ph·∫©m
 * @returns {Promise<Object>} - Th√¥ng tin chi ti·∫øt s·∫£n ph·∫©m
 */
export const getProductById = async (id) => {
  const response = await apiClient.get(config.api.endpoints.product.detail(id));
  
  console.log('üì¶ Product API response:', response.data);
  
  if (response.data.success) {
    return response.data.data.product;
  }
  
  throw new Error(response.data.message || 'Kh√¥ng th·ªÉ t·∫£i th√¥ng tin s·∫£n ph·∫©m');
};

/**
 * T√¨m ki·∫øm s·∫£n ph·∫©m
 * @param {string} keyword - T·ª´ kh√≥a t√¨m ki·∫øm
 * @param {Object} filters - C√°c b·ªô l·ªçc
 * @returns {Promise<Object>} - K·∫øt qu·∫£ t√¨m ki·∫øm
 */
export const searchProducts = async (keyword, filters = {}) => {
  const response = await apiClient.get(config.api.endpoints.product.search, {
    params: { keyword, ...filters }
  });
  
  if (response.data.success) {
    return response.data.data;
  }
  
  throw new Error(response.data.message || 'T√¨m ki·∫øm th·∫•t b·∫°i');
};

/**
 * L·∫•y s·∫£n ph·∫©m theo danh m·ª•c
 * @param {number} categoryId - ID danh m·ª•c
 * @param {number} page - S·ªë trang
 * @param {number} limit - S·ªë l∆∞·ª£ng s·∫£n ph·∫©m m·ªói trang
 * @returns {Promise<Object>} - Danh s√°ch s·∫£n ph·∫©m
 */
export const getProductsByCategory = async (categoryId, page = 1, limit = 10) => {
  const response = await apiClient.get(config.api.endpoints.product.list, {
    params: { categoryId, page, limit }
  });
  
  if (response.data.success) {
    return response.data.data;
  }
  
  throw new Error(response.data.message || 'Kh√¥ng th·ªÉ t·∫£i s·∫£n ph·∫©m theo danh m·ª•c');
};

export default {
  getProducts,
  getProductById,
  searchProducts,
  getProductsByCategory,
};