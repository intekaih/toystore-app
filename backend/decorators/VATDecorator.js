const CartItemDecorator = require('./CartItemDecorator');

/**
 * üí∞ VAT DECORATOR
 * 
 * Th√™m thu·∫ø VAT (10%) v√†o gi√° s·∫£n ph·∫©m
 */
class VATDecorator extends CartItemDecorator {
  /**
   * @param {BaseCartItem|CartItemDecorator} cartItem - Item ƒë∆∞·ª£c b·ªçc
   * @param {number} vatRate - T·ª∑ l·ªá VAT (m·∫∑c ƒë·ªãnh 0.1 = 10%)
   */
  constructor(cartItem, vatRate = 0.1) {
    super(cartItem);
    this.vatRate = vatRate;
  }

  /**
   * T√≠nh gi√° sau khi c·ªông VAT
   * @returns {number} Gi√° g·ªëc + (Gi√° g·ªëc √ó VAT%)
   */
  getPrice() {
    const originalPrice = this.cartItem.getPrice();
    const vatAmount = originalPrice * this.vatRate;
    return originalPrice + vatAmount;
  }

  /**
   * Th√™m m√¥ t·∫£ v·ªÅ VAT
   */
  getDescription() {
    const originalDesc = this.cartItem.getDescription();
    return `${originalDesc} + VAT ${this.vatRate * 100}%`;
  }

  /**
   * L·∫•y s·ªë ti·ªÅn VAT
   * @returns {number}
   */
  getVATAmount() {
    return this.cartItem.getPrice() * this.vatRate;
  }

  /**
   * Chi ti·∫øt bao g·ªìm th√¥ng tin VAT
   */
  getDetails() {
    const baseDetails = super.getDetails();
    return {
      ...baseDetails,
      vatRate: `${this.vatRate * 100}%`,
      vatAmount: this.getVATAmount()
    };
  }
}

module.exports = VATDecorator;
