/**
 * üéØ DECORATOR PATTERN - BASE COMPONENT
 * 
 * BaseCartItem: L·ªõp g·ªëc ƒë·∫°i di·ªán cho m·ªôt s·∫£n ph·∫©m trong gi·ªè h√†ng
 * ƒê√¢y l√† Component trong Decorator Pattern
 */

class BaseCartItem {
  /**
   * @param {string} name - T√™n s·∫£n ph·∫©m
   * @param {number} basePrice - Gi√° g·ªëc c·ªßa s·∫£n ph·∫©m
   * @param {number} quantity - S·ªë l∆∞·ª£ng (m·∫∑c ƒë·ªãnh = 1)
   */
  constructor(name, basePrice, quantity = 1) {
    this.name = name;
    this.basePrice = basePrice;
    this.quantity = quantity;
  }

  /**
   * Ph∆∞∆°ng th·ª©c c∆° b·∫£n tr·∫£ v·ªÅ gi√° g·ªëc
   * @returns {number} T·ªïng gi√° = gi√° g·ªëc √ó s·ªë l∆∞·ª£ng
   */
  getPrice() {
    return this.basePrice * this.quantity;
  }

  /**
   * L·∫•y t√™n s·∫£n ph·∫©m
   * @returns {string}
   */
  getName() {
    return this.name;
  }

  /**
   * L·∫•y s·ªë l∆∞·ª£ng
   * @returns {number}
   */
  getQuantity() {
    return this.quantity;
  }

  /**
   * M√¥ t·∫£ chi ti·∫øt s·∫£n ph·∫©m
   * @returns {string}
   */
  getDescription() {
    return `${this.name} (x${this.quantity})`;
  }

  /**
   * Hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt
   * @returns {object}
   */
  getDetails() {
    return {
      name: this.getName(),
      quantity: this.getQuantity(),
      basePrice: this.basePrice,
      finalPrice: this.getPrice(),
      description: this.getDescription()
    };
  }
}

module.exports = BaseCartItem;
