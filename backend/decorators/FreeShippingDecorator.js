const CartItemDecorator = require('./CartItemDecorator');

/**
 * üöö FREE SHIPPING DECORATOR
 * 
 * Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn khi ƒë∆°n h√†ng ƒë·∫°t ƒëi·ªÅu ki·ªán
 */
class FreeShippingDecorator extends CartItemDecorator {
  /**
   * @param {BaseCartItem|CartItemDecorator} cartItem - Item ƒë∆∞·ª£c b·ªçc
   * @param {number} shippingDiscount - S·ªë ti·ªÅn gi·∫£m ph√≠ ship (m·∫∑c ƒë·ªãnh 20000ƒë)
   * @param {number} minOrderValue - Gi√° tr·ªã ƒë∆°n h√†ng t·ªëi thi·ªÉu ƒë·ªÉ ƒë∆∞·ª£c mi·ªÖn ph√≠ ship (m·∫∑c ƒë·ªãnh 500000ƒë)
   */
  constructor(cartItem, shippingDiscount = 20000, minOrderValue = 500000) {
    super(cartItem);
    this.shippingDiscount = shippingDiscount;
    this.minOrderValue = minOrderValue;
  }

  /**
   * T√≠nh gi√° sau khi √°p d·ª•ng mi·ªÖn ph√≠ ship
   * @returns {number}
   */
  getPrice() {
    const originalPrice = this.cartItem.getPrice();
    
    // Ch·ªâ gi·∫£m gi√° ship n·∫øu ƒë∆°n h√†ng ƒë·∫°t ƒëi·ªÅu ki·ªán
    if (originalPrice >= this.minOrderValue) {
      return Math.max(0, originalPrice - this.shippingDiscount);
    }
    
    return originalPrice;
  }

  /**
   * Ki·ªÉm tra xem c√≥ ƒë·ªß ƒëi·ªÅu ki·ªán mi·ªÖn ph√≠ ship kh√¥ng
   * @returns {boolean}
   */
  isEligibleForFreeShipping() {
    return this.cartItem.getPrice() >= this.minOrderValue;
  }

  /**
   * Th√™m m√¥ t·∫£ v·ªÅ free shipping
   */
  getDescription() {
    const originalDesc = this.cartItem.getDescription();
    
    if (this.isEligibleForFreeShipping()) {
      return `${originalDesc} - Mi·ªÖn ph√≠ ship (-${this.shippingDiscount.toLocaleString('vi-VN')}ƒë)`;
    }
    
    const remaining = this.minOrderValue - this.cartItem.getPrice();
    return `${originalDesc} (Mua th√™m ${remaining.toLocaleString('vi-VN')}ƒë ƒë·ªÉ ƒë∆∞·ª£c mi·ªÖn ph√≠ ship)`;
  }

  /**
   * Chi ti·∫øt bao g·ªìm th√¥ng tin free shipping
   */
  getDetails() {
    const baseDetails = super.getDetails();
    return {
      ...baseDetails,
      shippingDiscount: this.shippingDiscount,
      minOrderValue: this.minOrderValue,
      isEligible: this.isEligibleForFreeShipping(),
      savedAmount: this.isEligibleForFreeShipping() ? this.shippingDiscount : 0
    };
  }
}

module.exports = FreeShippingDecorator;
