const db = require('./models');

async function updateOrder36() {
  try {
    console.log('üîß C·∫≠p nh·∫≠t ƒë∆°n h√†ng ID=36...\n');

    const order = await db.HoaDon.findByPk(36, {
      include: [{
        model: db.ChiTietHoaDon,
        as: 'chiTiet'
      }]
    });

    if (!order) {
      console.log('‚ùå Kh√¥ng t√¨m th·∫•y ƒë∆°n h√†ng ID=36');
      return;
    }

    console.log('üì¶ ƒê∆°n h√†ng:', order.MaHD);
    console.log('TongTien hi·ªán t·∫°i:', order.TongTien);
    console.log('TienGoc hi·ªán t·∫°i:', order.TienGoc);
    console.log('TienVAT hi·ªán t·∫°i:', order.TienVAT);

    // T√≠nh t·ªïng t·ª´ chi ti·∫øt h√≥a ƒë∆°n
    let tienGocCalculated = 0;
    if (order.chiTiet && order.chiTiet.length > 0) {
      tienGocCalculated = order.chiTiet.reduce((sum, item) => {
        return sum + (parseFloat(item.DonGia) * item.SoLuong);
      }, 0);
      console.log('\nT√≠nh t·ª´ ChiTietHoaDon:');
      console.log('TienGoc (t·ªïng DonGia √ó SoLuong):', tienGocCalculated);
    }

    const tongTien = parseFloat(order.TongTien);
    
    // T√≠nh TienGoc v√† TienVAT
    // C√¥ng th·ª©c: TongTien = TienGoc + TienVAT + PhiVanChuyen
    // V·ªõi TienVAT = TienGoc √ó 0.1
    // => TongTien = TienGoc + TienGoc √ó 0.1 + PhiVanChuyen
    // => TongTien = TienGoc √ó 1.1 + PhiVanChuyen
    // => TienGoc = (TongTien - PhiVanChuyen) / 1.1
    
    const phiVanChuyen = 30000;
    let tienGoc = tienGocCalculated > 0 ? tienGocCalculated : Math.round((tongTien - phiVanChuyen) / 1.1);
    let tienVAT = Math.round(tienGoc * 0.1);

    console.log('\nD·ªØ li·ªáu m·ªõi s·∫Ω c·∫≠p nh·∫≠t:');
    console.log('TienGoc:', tienGoc);
    console.log('TienVAT:', tienVAT);
    console.log('TyLeVAT:', 0.1);
    console.log('TienGiamGia:', 0);
    console.log('PhiVanChuyen:', phiVanChuyen);
    console.log('MiemPhiVanChuyen:', false);

    // Ki·ªÉm tra c√¥ng th·ª©c
    const calculated = tienGoc + tienVAT + phiVanChuyen;
    console.log('\nKi·ªÉm tra: TienGoc + TienVAT + PhiVanChuyen =', calculated);
    console.log('TongTien trong DB:', tongTien);
    console.log('Ch√™nh l·ªách:', Math.abs(calculated - tongTien));

    // C·∫≠p nh·∫≠t
    await order.update({
      TienGoc: tienGoc,
      TienVAT: tienVAT,
      TyLeVAT: 0.1,
      TienGiamGia: 0,
      PhiVanChuyen: phiVanChuyen,
      MiemPhiVanChuyen: false
    });

    console.log('\n‚úÖ ƒê√£ c·∫≠p nh·∫≠t th√†nh c√¥ng!');
    console.log('\nüîÑ H√£y REFRESH trang ƒë·ªÉ xem k·∫øt qu·∫£!');

  } catch (error) {
    console.error('‚ùå L·ªói:', error.message);
  } finally {
    await db.sequelize.close();
    process.exit(0);
  }
}

updateOrder36();
